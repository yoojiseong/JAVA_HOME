package d250609.ch5;

public class Inheritance_Ex1 {
    // 상속 , 기본 개념,
    // 부모 클래스와 자식 클래스의 관계
    // 필드, 메서드 상속 및 오버라이딩(새기능으로 고쳐 쓰기)

    // super ? , 부모를 가리키는 키워드
    // this, 자기 자신의 인스턴스를 가리키는 키워드

    // protected 이용한 접근방법 확인.

    // 상속? 왜 하나요? 객체지향 프로그래밍 기법에서, 재사용 잘 이용하자.
    // 상속은 Is A 관계이다라고 합니다.
    // 무조건 상속이 되는게 아니다. 포함 관계가 성립을 해야 상속이 가능함.
    // 예시)
    // 개는 동물이다. Dog is Animal. (성립)
    // 전기차는 자동차이다. ElectricCar is Car(성립)
    // 저그는 스타크래프트의 한 종족이다.

    // 안되는 예)
    // 저그는 운동선수이다.

    // 상속, 기본 문법
    // public class 자식클래스명 extends 부모클래스명 {}
    // 부모 클래스 : Animal, 자식 클래스 : Dog
    //
    // 주의사항
    // 1) 상속시, 부모의 초기화가 먼저 되고, 자식의 초기화가 이루어진다.
    // 예시)
    // 부모 클래스 : Animal_Ex1, 자식 클래스 : Dog_Ex1
    // 이용해서, 자식 인스턴스를 생성할 때,
    // A a = new A();
    // Dog_Ex1 dog_Ex1 = new Dog_Ex1();
    // -> 1) 객체 생성 2) 인스턴스 생성했다 3) 기본 생성자로 초기화 했다.
    // 초기화 할 때 뭐야? 1) 생성자 호출 , 기본값으로 할 당이 된다는 말,
    // 클래스 -> null, 문자열 마찬가지고, int 정수이면 0으로 초기화가 된다는 말.

}
